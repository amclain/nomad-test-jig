- name: create nomad config directory
  file:
    path: /etc/nomad/conf.d
    state: directory
  become: true
  become_user: root

- name: copy nomad server config
  copy:
    src: nomad/server.hcl
    dest: /etc/nomad/conf.d/server.hcl
  become: true
  become_user: root

- name: check consul app-count key
  uri:
    url: "http://{{ consul_server_ip }}:8500/v1/kv/app-count?raw=true"
    return_content: yes
    status_code: [200, 404]
  register: app_count

- name: create consul app-count key
  uri:
    url: "http://{{ consul_server_ip }}:8500/v1/kv/app-count"
    method: PUT
    body: "1"
  when: app_count.status == 404

- name: check consul app-image key
  uri:
    url: "http://{{ consul_server_ip }}:8500/v1/kv/app-image?raw=true"
    return_content: yes
    status_code: [200, 404]
  register: app_image

- name: create consul app-image key
  uri:
    url: "http://{{ consul_server_ip }}:8500/v1/kv/app-image"
    method: PUT
    body: "1"
  when: app_image.status == 404

- name: create nomad jobs directory
  file:
    path: "{{ nomad_data_dir }}"
    state: directory
  become: true
  become_user: root

- name: copy test app nomad job
  copy:
    src: nomad/app.hcl.ctmpl
    dest: "{{ nomad_data_dir }}/app.hcl.ctmpl"
  become: true
  become_user: root
  register: copy_test_app_nomad_job

- name: copy app consul-template config
  template:
    src: consul-template/app.hcl
    dest: /etc/consul-template/conf.d/app.hcl
  become: true
  become_user: root
  register: create_app_consul_template_config

- name: reload consul-template service
  service:
    name: consul-template
    state: reloaded
  become: true
  become_user: root
  when: create_app_consul_template_config.changed or copy_test_app_nomad_job.changed
